{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielliau/Documents/login-authentication/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\"; // ADDED\n\nimport { database } from \"../firebase\"; // END ADDED\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const history = useHistory(); // ADDED\n\n  function generateKeys() {\n    const {\n      generateKeyPair\n    } = require(\"crypto\");\n\n    generateKeyPair(\"rsa\", {\n      modulusLength: 4096,\n      publicKeyEncoding: {\n        type: \"spki\",\n        format: \"pem\"\n      },\n      privateKeyEncoding: {\n        type: \"pkcs8\",\n        format: \"pem\",\n        cipher: \"aes-256-cbc\",\n        passphrase: \"top secret\"\n      }\n    }, (err, publicKey, privateKey) => {\n      // Callback function\n      if (err) {\n        console.log(\"Error is: \", err);\n      } else {\n        console.log(\"Public Key is: \", publicKey.toString(\"hex\"));\n        console.log();\n        console.log(\"Private Key is: \", privateKey.toString(\"hex\")); // var public_key = publicKey.toString(\"hex\");\n        // var private_key = privateKey.toString(\"hex\");\n        // console.log(\"Public Key is: \", public_key);\n        // console.log();\n        // console.log(\"Private Key is: \", private_key);\n        // keysDB(public_key, private_key);\n      }\n    });\n  }\n\n  function keysDB(pub_key, pri_key) {\n    var public_name = currentUser.uid + \"_publickey\";\n    var private_name = currentUser.uid + \"_privatekey\";\n    const dataPublic = {\n      name: public_name,\n      createdAt: database.getCurrentTimestamp(),\n      userId: currentUser.uid,\n      key: pub_key\n    };\n    const resPub = database.collection(\"public\").set(dataPublic);\n    console.log(\"Set: \", resPub);\n    const dataPrivate = {\n      name: private_name,\n      createdAt: database.getCurrentTimestamp(),\n      userId: currentUser.uid,\n      key: pri_key\n    };\n    const resPri = database.collection(\"private\").set(dataPrivate);\n    console.log(\"Set: \", resPri);\n  } // END ADDED\n\n\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" \", currentUser.email, /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/update-profile\",\n          className: \"btn btn-primary w-100 mt-3\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        onClick: handleLogout,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        onClick: generateKeys,\n        children: \"Generate Keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"1J7KfXvzmE8YnwpA4XrF4h4ItmM=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/gabrielliau/Documents/login-authentication/src/components/Dashboard.js"],"names":["React","useState","Card","Button","Alert","useAuth","Link","useHistory","database","Dashboard","error","setError","currentUser","logout","history","generateKeys","generateKeyPair","require","modulusLength","publicKeyEncoding","type","format","privateKeyEncoding","cipher","passphrase","err","publicKey","privateKey","console","log","toString","keysDB","pub_key","pri_key","public_name","uid","private_name","dataPublic","name","createdAt","getCurrentTimestamp","userId","key","resPub","collection","set","dataPrivate","resPri","handleLogout","push","email"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\n// ADDED\nimport { database } from \"../firebase\";\n// END ADDED\n\nexport default function Dashboard() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  // ADDED\n  function generateKeys() {\n    const { generateKeyPair } = require(\"crypto\");\n    generateKeyPair(\n      \"rsa\",\n      {\n        modulusLength: 4096,\n        publicKeyEncoding: {\n          type: \"spki\",\n          format: \"pem\",\n        },\n        privateKeyEncoding: {\n          type: \"pkcs8\",\n          format: \"pem\",\n          cipher: \"aes-256-cbc\",\n          passphrase: \"top secret\",\n        },\n      },\n      (err, publicKey, privateKey) => {\n        // Callback function\n        if (err) {\n          console.log(\"Error is: \", err);\n        } else {\n          console.log(\"Public Key is: \", publicKey.toString(\"hex\"));\n          console.log();\n          console.log(\"Private Key is: \", privateKey.toString(\"hex\"));\n\n          // var public_key = publicKey.toString(\"hex\");\n          // var private_key = privateKey.toString(\"hex\");\n          // console.log(\"Public Key is: \", public_key);\n          // console.log();\n          // console.log(\"Private Key is: \", private_key);\n          // keysDB(public_key, private_key);\n        }\n      }\n    );\n  }\n  function keysDB(pub_key, pri_key) {\n    var public_name = currentUser.uid + \"_publickey\";\n    var private_name = currentUser.uid + \"_privatekey\";\n    const dataPublic = {\n      name: public_name,\n      createdAt: database.getCurrentTimestamp(),\n      userId: currentUser.uid,\n      key: pub_key,\n    };\n    const resPub = database.collection(\"public\").set(dataPublic);\n    console.log(\"Set: \", resPub);\n\n    const dataPrivate = {\n      name: private_name,\n      createdAt: database.getCurrentTimestamp(),\n      userId: currentUser.uid,\n      key: pri_key,\n    };\n    const resPri = database.collection(\"private\").set(dataPrivate);\n    console.log(\"Set: \", resPri);\n  }\n  // END ADDED\n\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <strong>Email:</strong> {currentUser.email}\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Log Out\n        </Button>\n        {/* ADDED */}\n        <Button variant=\"link\" onClick={generateKeys}>\n          Generate Keys\n        </Button>\n        {/* END ADDED */}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}